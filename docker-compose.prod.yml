services:
  # Apps

  api:
    container_name: app_api
    depends_on:
      - postgres
    build:
      dockerfile: api.Dockerfile
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/app

  app:
    container_name: app_app
    build:
      dockerfile: app.Dockerfile
      args:
        - PUBLIC_API_URL=${PUBLIC_API_URL}
    env_file:
      - .env
    restart: unless-stopped
    environment:
      - API_URL=http://api:80
      - DATABASE_URL=postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/app

  # Database

  postgres:
    container_name: app_postgres
    image: postgres:16
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: app

  # Reverse proxy

  nginx:
    container_name: app_nginx
    image: nginx:stable-alpine
    depends_on:
      - api
      - app
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./.docker/nginx/templates:/etc/nginx/templates:ro
    restart: unless-stopped

  nginx-https:
    container_name: app_nginx_https
    image: nginx:stable-alpine
    depends_on:
      - nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    volumes:
      - ./.docker/nginx-https/templates:/etc/nginx/templates:ro
    restart: unless-stopped

  certbot:
    container_name: app_certbot
    image: certbot/dns-ovh
    volumes:
      - ./.docker/certbot/etc:/etc/letsencrypt
      - ./.docker/certbot/lib:/var/lib/letsencrypt
      - ./.docker/certbot/ovh.ini:/var/ovh.ini
    command: certonly --agree-tos --renew-by-default --text --email $EMAIL --dns-ovh --dns-ovh-credentials /var/ovh.ini -d $DOMAIN
